import os
import json
import autogen
import sqlite3
import requests
from dotenv import load_dotenv
load_dotenv()

conn = sqlite3.connect('customer_netcore.db')
cursor = conn.cursor()

# gpt-4o
config_list = [
    {
        "model": "gpt-4o",
        "api_key": os.getenv("OPENAI_API_KEY"),
    }
]

# config_list = [
#     {
#         "api_type": "bedrock",
#         "model": "us.meta.llama3-2-11b-instruct-v1:0",
#         "aws_region": "us-east-1",
#         "aws_access_key": os.getenv("AWS_ACCESS_KEY"),
#         "aws_secret_key": os.getenv("AWS_SECRET_KEY"),
#     }
# ]

# Define the Agents

code_interpreter = autogen.UserProxyAgent(
    "code_interpreter",
    human_input_mode="NEVER",
    code_execution_config={
        "work_dir": "coding",
        "use_docker": False,
    },
    is_termination_msg=lambda x: x.get("content", "") and x.get("content", "").rstrip().endswith("TERMINATE"),
    max_consecutive_auto_reply=1,
)

data_retriever = autogen.AssistantAgent(
    "data_retriever",
    system_message="""
    You are the data engineer who retrieves the data from the database. Your task is to utilize the 'retrieve_user_data' function that fetches the customer 
    data from the database based on the user_id provided. The data includes various attributes such as total_spent, transaction_frequency, 
    average_transaction_value, preferred_payment_method, purchase_channel, preferred_device, preferred_language, loyalty_program_member, 
    loyalty_points_balance, email_open_rate, email_click_rate, SMS_opt_in, product_browsing_history, coupon_usage_frequency, social_media_engagement, 
    preferred_communication_channel, click_through_rate, conversion_rate, brand_loyalty_index, lifetime_value_estimate, and product_affinity. 
    """,
    description="You are a data engineer and you are the first person in this pipeline, your task is to retrieve the data from the database based on the user_id provided.",
    llm_config={"config_list": config_list},
)

analyst = autogen.AssistantAgent(
    "analyst",
    system_message="""
    You are a data analyst specializing in marketing segmentation. Your task is to analyze distinct audience segments based on their preferences, behaviors, and engagement metrics from the data generated by the data_retriever and generate a research report.
    Utilize the following features to provide a detailed report for each segment: total_spent, transaction_frequency, average_transaction_value, preferred_payment_method, purchase_channel, preferred_device, 
    preferred_language, loyalty_program_member, loyalty_points_balance, email_open_rate, email_click_rate, SMS_opt_in, product_browsing_history, 
    coupon_usage_frequency, social_media_engagement, preferred_communication_channel, click_through_rate, conversion_rate, brand_loyalty_index, 
    lifetime_value_estimate, and product_affinity. Provide insights into each segment's buying behavior, communication preferences, and potential engagement 
    strategies.
    <Goals>
    - Identify customer segments with deep insights into their spending habits, engagement patterns, and preferred communication channels.
    - Analyze loyalty program participation, social media engagement, and product affinities.
    - Suggest personalized content themes that cater to each segment's unique behaviors and preferences.
    </Goals>

    <Key Tasks>
    - Segment customers based on metrics such as spending patterns, engagement rates, and loyalty points.
    - Provide actionable insights on how to tailor content for segments like "High-Value Customers," "Occasional Shoppers," "Loyalty Program Members," etc.
    - Recommend optimal communication channels (email, SMS, social media) and timing for each segment.
    </Key Tasks>
    """,
    description="You are an analyst, your task it to identify and analyze distinct audience segments and generate a research report from the user data given by the data_retriever before the email is generated.",
    llm_config={"config_list": config_list},
)


email_agent = autogen.AssistantAgent(
    "email_agent",
    system_message="""
    You are an expert email marketing agent tasked with generating complete, personalized email content. Your job is to create engaging and visually appealing emails that are ready to be sent, using dynamic placeholders to ensure each email is fully customized for the recipient. Use placeholders such as [USER_NAME], [DISCOUNT], [PRODUCT_NAME], and [MSP] to integrate personalized data seamlessly. The emails should be optimized for readability and display correctly on both desktop and mobile devices, using simple and effective HTML formatting.

    <Example Emails>

    - Example 1:
        ```
        Dear [USER_NAME],

        Your wardrobe deserves an upgrade! Get [DISCOUNT]% off on the latest [PRODUCT_NAME] from StylishThreads. With prices as low as [MSP], there’s no better time to shop. Don’t miss out on this special offer!

        Happy Shopping,
        The StylishThreads Team
        ```

    - Example 2:
        ```
        Dear [USER_NAME],

        Discover our newest range of [PRODUCT_NAME] at StylishThreads! Even without a discount, you'll love the new collection starting at [MSP]. Don't miss out on the latest trends.

        Best Regards,
        The StylishThreads Team
        ```

    <Instructions>

    - Create personalized email content** that is ready to be sent to the recipient. The emails should be more than templates – they should be complete and fully written out.
    - Ensure the email content has a clear structure with appropriate greetings, body content, and sign-off lines.
    - Use HTML only where necessary to format the text, such as bolding key elements, but avoid unnecessary HTML tags.
    - Ensure that the email content is conversational, warm, and fits the brand’s tone and voice, and is designed to engage the reader effectively.

    Keep in mind that the emails should be personalized based on the user data provided by the analyst and should be very simple and optimized for 
    engagement and conversion.
    </Instructions>
    """,
    llm_config={"config_list": config_list},
)


@code_interpreter.register_for_execution()
@data_retriever.register_for_llm(
    name="retrieve_user_data", description="Get the information from the database about the user."
)
def retrieve_user_data(user_id: int):
    cursor.execute("SELECT * FROM customer_data WHERE user_id = ?", (user_id,))
    user_data = cursor.fetchone()
    if user_data:
        columns = [col[0] for col in cursor.description]
        user_data_dict = dict(zip(columns, user_data))
        return user_data_dict
    return None


# Put them in a virtual room
groupchat = autogen.GroupChat(
    agents=[data_retriever, code_interpreter, analyst, email_agent],
    messages=[],
    allow_repeat_speaker=True,
    speaker_selection_method="round_robin",
    max_round=15,
)


manager = autogen.GroupChatManager(
    groupchat=groupchat,
    llm_config={
        "config_list": config_list,
    },
)
# Give it a task or assign a goal

task = """
Analyze the customer data with user_id '83153' and create an email marketing campaign targeting different audience segments with personalized content. Use metrics such as total_spent, purchase_frequency, loyalty_points_balance, email_click_rate, and preferred_payment_method to inform your strategies. Ensure the campaign is optimized for engagement and conversion, with real-time adaptation based on feedback.
"""

user_proxy = autogen.UserProxyAgent(
    "user_proxy",
    human_input_mode="NEVER",
    code_execution_config=False,
    default_auto_reply="",
)

# start the agents to work
user_proxy.initiate_chat(manager, message=task)
last_messages = groupchat.messages
    
print('--------------\n\n\n')
print(
        {
            'last_messages': last_messages
        }
)
